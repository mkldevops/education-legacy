name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Trigger Coolify
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Trigger Coolify Webhook
        env:
          WEBHOOK_URL: ${{ secrets.COOLIFY_WEBHOOK_URL }}
          WEBHOOK_TOKEN: ${{ secrets.COOLIFY_WEBHOOK_TOKEN }}
        run: |
          set -euo pipefail
          
          # Validate that webhook URL is provided
          if [ -z "${WEBHOOK_URL:-}" ]; then
            echo "Error: COOLIFY_WEBHOOK_URL secret is required"
            exit 1
          fi
          
          # Prepare headers
          headers=("-H" "Content-Type: application/json")
          if [ -n "${WEBHOOK_TOKEN:-}" ]; then
            headers+=("-H" "Authorization: Bearer ${WEBHOOK_TOKEN}")
            echo "Using authorization token for webhook request"
          else
            echo "No authorization token provided, proceeding without auth"
          fi
          
          # Prepare payload with commit info
          payload=$(jq -n \
            --arg sha "${GITHUB_SHA}" \
            --arg ref "${GITHUB_REF}" \
            --arg repository "${GITHUB_REPOSITORY}" \
            --arg actor "${GITHUB_ACTOR}" \
            --arg run_id "${GITHUB_RUN_ID}" \
            '{
              sha: $sha,
              ref: $ref,
              repository: $repository,
              actor: $actor,
              run_id: $run_id,
              timestamp: now | strftime("%Y-%m-%dT%H:%M:%SZ")
            }'
          )
          
          echo "Triggering deployment webhook..."
          echo "Repository: ${GITHUB_REPOSITORY}"
          echo "Commit: ${GITHUB_SHA}"
          echo "Branch: ${GITHUB_REF}"
          
          # Make the webhook request with timeouts/retries; capture body and status separately
          http_code=$(curl -sS -L --connect-timeout 5 --max-time 30 \
            --retry 3 --retry-all-errors \
            -w "%{http_code}" \
            -o /tmp/coolify_resp.txt \
            -X POST "${WEBHOOK_URL}" "${headers[@]}" -d "${payload}")
          response_body=$(cat /tmp/coolify_resp.txt 2>/dev/null || true)
          
          echo "HTTP Status: ${http_code}"
          if [ "${http_code}" -ge 200 ] && [ "${http_code}" -lt 300 ]; then
            echo "✅ Deployment webhook triggered successfully"
            [ -n "${response_body}" ] && echo "Response: ${response_body}"
          else
            echo "❌ Deployment webhook failed with status ${http_code}"
            [ -n "${response_body}" ] && echo "Response: ${response_body}"
            exit 1
          fi