{% trans_default_domain 'family' %}

<div x-data="{ 
        showPackageModal: false, 
        selectedStudent: null,
        isSubmitting: false,
        successMessage: '',
        errorMessage: '',
        
        async submitForm(event) {
            event.preventDefault();
            this.isSubmitting = true;
            this.errorMessage = '';
            this.successMessage = '';
            
            try {
                const formData = new FormData(event.target);
                
                // Create JSON payload for the API
                const payload = {
                    packageId: parseInt(formData.get('{{ formPackage.package.vars.full_name }}')),
                    studentId: this.selectedStudent,
                    discount: parseFloat(formData.get('{{ formPackage.discount.vars.full_name }}')) || 0,
                    comment: formData.get('{{ formPackage.comment.vars.full_name }}') || null
                };
                
                const response = await fetch('{{ path('app_api_package_student_period_create') }}', {
                    method: 'POST',
                    body: JSON.stringify(payload),
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                
                if (response.ok) {
                    this.successMessage = 'Forfait ajouté avec succès !';
                    setTimeout(() => {
                        this.closeModal();
                        location.reload(); // Refresh to show new package
                    }, 1500);
                } else {
                    const errorData = await response.json();
                    console.error('Error response:', errorData);
                    this.errorMessage = errorData.message || 'Une erreur est survenue lors de l\'ajout du forfait.';
                }
            } catch (error) {
                console.error('Submit error:', error);
                this.errorMessage = 'Une erreur réseau est survenue.';
            } finally {
                this.isSubmitting = false;
            }
        },
        
        closeModal() {
            this.showPackageModal = false;
            this.selectedStudent = null;
            this.errorMessage = '';
            this.successMessage = '';
            this.isSubmitting = false;
        }
    }"
     x-init="
        console.log('Package modal Alpine component initialized');
        window.openPackageModal = function(studentId) {
            console.log('Opening package modal for student:', studentId);
            try {
                $data.selectedStudent = studentId;
                $data.showPackageModal = true;
                // Set the student ID in the hidden field
                setTimeout(() => {
                    const studentField = document.querySelector('#{{ formPackage.student.vars.id }}');
                    if (studentField) {
                        studentField.value = studentId;
                        console.log('Set student field value:', studentId);
                    } else {
                        console.warn('Student field not found:', '#{{ formPackage.student.vars.id }}');
                    }
                }, 100);
            } catch(e) {
                console.error('Error opening package modal:', e);
            }
        };
        
        // Test if modal data is reactive
        console.log('Initial modal state:', $data.showPackageModal);
     ">

    <!-- Package Modal -->
    <div x-show="showPackageModal" class="fixed inset-0 z-50 overflow-y-auto" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-200" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" @keydown.escape.window="closeModal()" style="display: none;">
            <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0" @click.away="closeModal()">
                <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

                <span class="hidden sm:inline-block sm:align-middle sm:h-screen">&#8203;</span>

                <div @click.stop class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="bg-indigo-100 rounded-full p-2 mr-3">
                                    {{ ux_icon('tabler:calendar-plus', {class: 'w-5 h-5 text-indigo-600'}) }}
                            </div>
                            <h4 class="text-lg font-medium text-gray-900">{{ 'new_package_student'|trans({'%period%' : period}) }}</h4>
                        </div>
                        <button type="button" @click="closeModal()" class="text-gray-400 hover:text-gray-600 focus:outline-none focus:text-gray-600 transition ease-in-out duration-150">
                            {{ ux_icon('tabler:x', {class: 'w-6 h-6'}) }}
                        </button>
                    </div>
                </div>
                
                <div class="px-6 py-4">
                    <!-- Success Message -->
                    <div x-show="successMessage" x-transition class="mb-4 bg-green-50 border border-green-200 text-green-600 px-4 py-3 rounded-lg">
                        <span x-text="successMessage"></span>
                    </div>
                    
                    <!-- Error Message -->
                    <div x-show="errorMessage" x-transition class="mb-4 bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg">
                        <span x-text="errorMessage"></span>
                    </div>
                    
                    <form @submit="submitForm" class="space-y-4">
                    
                    <div class="space-y-4">
                        <!-- Package Selection -->
                        <div>
                            {{ form_label(formPackage.package, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {{ form_widget(formPackage.package, {'attr': {'class': 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-sm', 'required': 'required'}}) }}
                            {{ form_errors(formPackage.package) }}
                        </div>
                        
                        
                        <!-- Discount -->
                        <div>
                            {{ form_label(formPackage.discount, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {{ form_widget(formPackage.discount, {'attr': {'class': 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-sm'}}) }}
                            {{ form_errors(formPackage.discount) }}
                        </div>
                        
                        <!-- Comment -->
                        <div>
                            {{ form_label(formPackage.comment, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {{ form_widget(formPackage.comment, {'attr': {'class': 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-sm', 'rows': 3}}) }}
                            {{ form_errors(formPackage.comment) }}
                        </div>
                    </div>
                    
                    <div class="flex justify-end space-x-3 pt-6">
                        <button type="button" @click="closeModal()" :disabled="isSubmitting" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed">
                            {{ ux_icon('tabler:x', {class: 'w-4 h-4 mr-2'}) }}
                            Annuler
                        </button>
                        <button type="submit" :disabled="isSubmitting" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed" id="save-package-student">
                            <div x-show="isSubmitting" class="w-4 h-4 mr-2">
                                <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                            </div>
                            <div x-show="!isSubmitting" class="w-4 h-4 mr-2">
                                {{ ux_icon('tabler:check', {class: 'w-4 h-4'}) }}
                            </div>
                            <span x-text="isSubmitting ? 'Enregistrement...' : 'Enregistrer le forfait'"></span>
                        </button>
                    </div>
                    
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
