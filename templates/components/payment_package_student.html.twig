{% trans_default_domain 'family' %}

{% set groupedPayments = this.paymentsByOperation %}

<div x-data="{ showPaymentModal: false, showHistoryModal: false }">
    <div class="flex flex-col sm:flex-row gap-2">
        <button
            type="button"
            @click="showPaymentModal = true"
            class="inline-flex items-center justify-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-lg transition-colors duration-200 w-full sm:w-auto"
        >
            {{ ux_icon('tabler:credit-card', { class: 'w-4 h-4 mr-2 flex-shrink-0' }) }}
            <span class="truncate">{{ 'payments.button.new'|trans }}</span>
        </button>

        <button
            type="button"
            @click="showHistoryModal = true"
            class="inline-flex items-center justify-center px-4 py-2 border border-green-200 text-green-700 bg-green-50 hover:bg-green-100 text-sm font-medium rounded-lg transition-colors duration-200 w-full sm:w-auto {{ groupedPayments is empty ? 'opacity-80' : '' }}"
        >
            {{ ux_icon('tabler:receipt-2', { class: 'w-4 h-4 mr-2 flex-shrink-0' }) }}
            <span class="truncate">{{ 'payments.button.history'|trans }}</span>
        </button>
    </div>

    <!-- Payment Modal -->
    <div
        x-show="showPaymentModal"
        x-cloak
        @click.away="showPaymentModal = false"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
        class="fixed inset-0 z-50 overflow-y-auto"
    >
        <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

            <span class="hidden sm:inline-block sm:align-middle sm:h-screen">&#8203;</span>

            <div
                @click.stop
                class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full"
            >
                <div class="px-6 py-4 border-b border-gray-200">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <div class="bg-green-100 rounded-full p-2 mr-3">
                                {{ ux_icon('tabler:credit-card', { class: 'w-5 h-5 text-green-600' }) }}
                            </div>
                            <h4 class="text-lg font-medium text-gray-900">
                                {{ 'payments.modal.title'|trans({'%family%': family, '%period%': period }) }}
                            </h4>
                        </div>
                        <button
                            type="button"
                            @click="showPaymentModal = false"
                            class="text-gray-400 hover:text-gray-600 focus:outline-none focus:text-gray-600 transition ease-in-out duration-150"
                        >
                            {{ ux_icon('tabler:x', { class: 'w-6 h-6' }) }}
                        </button>
                    </div>
                </div>

                <div class="px-6 py-4">
                    <div id="payment-error-alert" class="alert alert-danger hidden mb-4 bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg"></div>

                    {{ form_start(this.form, {'attr': {'id': 'payment-form', 'class': 'space-y-4'}}) }}
                        <div class="space-y-4">
                            {% for child in this.form %}
                                <div>
                                    {{ form_label(child, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                                    {{ form_widget(child, {'attr': {'class': 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 text-sm'}}) }}
                                    {{ form_errors(child) }}
                                </div>
                            {% endfor %}
                        </div>

                        <div class="flex justify-end space-x-3 pt-6">
                            <button
                                type="button"
                                @click="showPaymentModal = false"
                                class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                            >
                                {{ ux_icon('tabler:x', { class: 'w-4 h-4 mr-2' }) }}
                                {{ 'payments.modal.cancel'|trans }}
                            </button>
                            <button
                                type="submit"
                                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                            >
                                {{ ux_icon('tabler:check', { class: 'w-4 h-4 mr-2' }) }}
                                {{ 'payments.modal.submit'|trans }}
                            </button>
                        </div>
                    {{ form_end(this.form) }}
                </div>
            </div>
        </div>
    </div>

    <!-- History Modal -->
    <div
        x-show="showHistoryModal"
        x-cloak
        @click.away="showHistoryModal = false"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
        class="fixed inset-0 z-50 overflow-y-auto"
    >
        <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

            <span class="hidden sm:inline-block sm:align-middle sm:h-screen">&#8203;</span>

            <div
                @click.stop
                class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-3xl sm:w-full"
            >
                <div class="px-6 py-4 border-b border-gray-200">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <div class="bg-green-100 rounded-full p-2 mr-3">
                                {{ ux_icon('tabler:history', { class: 'w-5 h-5 text-green-600' }) }}
                            </div>
                            <h4 class="text-lg font-medium text-gray-900">
                                {{ 'payments.history.title'|trans({'%period%': period }) }}
                            </h4>
                        </div>
                        <button
                            type="button"
                            @click="showHistoryModal = false"
                            class="text-gray-400 hover:text-gray-600 focus:outline-none focus:text-gray-600 transition ease-in-out duration-150"
                        >
                            {{ ux_icon('tabler:x', { class: 'w-6 h-6' }) }}
                        </button>
                    </div>
                </div>

                <div class="px-6 py-5 space-y-4">
                    {% if groupedPayments is empty %}
                        <div class="bg-gray-50 border border-gray-200 rounded-lg px-4 py-3 text-sm text-gray-600">
                            {{ 'payments.history.empty'|trans }}
                        </div>
                    {% else %}
                        <div class="space-y-4">
                            {% for paymentGroup in groupedPayments %}
                                {% set operation = paymentGroup.operation %}
                                {% set operationDate = operation.date ?? operation.datePlanned ?? operation.createdAt %}
                                <div class="border border-gray-200 rounded-lg overflow-hidden">
                                    <div class="px-4 py-3 bg-gray-50 border-b border-gray-200">
                                        <div class="flex items-start justify-between">
                                            <div>
                                                <p class="text-sm font-semibold text-gray-900">
                                                    {{ 'payments.history.operation_total'|trans }}
                                                    <span class="ml-1 text-green-600">
                                                        {{ paymentGroup.total|number_format(2) }} â‚¬
                                                    </span>
                                                </p>
                                                <p class="mt-1 text-xs text-gray-500">
                                                    {{ 'payments.history.operation_by'|trans({
                                                        '%author%': operation.author ? operation.author.nameComplete : '---',
                                                        '%date%': operationDate ? operationDate|date('d/m/Y H:i') : '---'
                                                    }) }}
                                                </p>
                                                {% if operation.reference %}
                                                    <p class="mt-1 text-xs text-gray-500">
                                                        {{ 'payments.history.operation_reference'|trans }} : {{ operation.reference }}
                                                    </p>
                                                {% endif %}
                                            </div>
                                            <a
                                                href="{{ path('app_operation_show', { id: operation.id }) }}"
                                                class="inline-flex items-center text-xs font-medium text-blue-600 hover:text-blue-800"
                                            >
                                                {{ ux_icon('tabler:external-link', { class: 'w-4 h-4 mr-1' }) }}
                                                {{ 'payments.history.operation_link'|trans }}
                                            </a>
                                        </div>
                                    </div>

                                    <div class="px-4 py-4 overflow-x-auto">
                                        <table class="min-w-full text-sm text-gray-700">
                                            <thead>
                                                <tr class="text-left text-xs font-semibold uppercase tracking-wide text-gray-500">
                                                    <th class="py-2 pr-4">{{ 'payments.history.student_column'|trans }}</th>
                                                    <th class="py-2 pr-4">{{ 'payments.history.package_column'|trans }}</th>
                                                    <th class="py-2 text-right">{{ 'payments.history.amount_column'|trans }}</th>
                                                </tr>
                                            </thead>
                                            <tbody class="divide-y divide-gray-200">
                                                {% for payment in paymentGroup.payments %}
                                                    <tr>
                                                        <td class="py-2 pr-4">
                                                            {{ payment.packageStudentPeriod.student.nameComplete }}
                                                        </td>
                                                        <td class="py-2 pr-4">
                                                            {{ payment.packageStudentPeriod.package }}
                                                        </td>
                                                        <td class="py-2 text-right font-semibold text-gray-900">
                                                            {{ payment.amount|number_format(2) }} â‚¬
                                                        </td>
                                                    </tr>
                                                {% endfor %}
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    (() => {
        const form = document.querySelector('#payment-form');
        if (!form) {
            return;
        }

        form.addEventListener('submit', (event) => {
            event.preventDefault();
            const alert = document.querySelector('#payment-error-alert');
            if (alert) {
                alert.classList.add('hidden');
                alert.textContent = '';
            }

            const url = Routing.generate('api_payment_package_student_family', { family: {{ family.id }}, period: {{ period.id }} });

            fetch(url, {
                method: 'POST',
                body: new FormData(form),
            })
                .then((response) => {
                    if (response.ok && response.headers.get('content-type')?.includes('application/json')) {
                        return response.json();
                    }

                    throw new Error('invalid_response');
                })
                .then(() => {
                    window.location.reload();
                })
                .catch(() => {
                    if (!alert) {
                        return;
                    }

                    alert.classList.remove('hidden');
                    alert.textContent = '{{ 'payments.error.default'|trans|e('js') }}';
                });
        });
    })();
</script>
