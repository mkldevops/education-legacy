image: $CI_REGISTRY_IMAGE:pipeline

before_script:
    - symfony composer install --no-scripts

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - vendor

stages:
    - security
    - coding_standards
    - tests
    - deploy

check_vulnerabilities:
    stage: security
    needs : []
    script :
        - symfony check:security
        - symfony check:requirements
    allow_failure: false

lint:
    stage: coding_standards
    needs : []
    script :
        - symfony console lint:yaml config --parse-tags
        - symfony console lint:twig templates --env=prod
        - symfony console lint:container --no-debug
        - make doctrine-validate c="--env=test"

phpstan:
    needs: []
    stage: coding_standards
    script:
        - make stan
    allow_failure: false

php-cs-fixer:
    needs: []
    stage: coding_standards
    script:
        - make cs-dry
    allow_failure: false

phpunit:
    needs: []
    services:
        - mysql:8.0
    stage: tests
    variables:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: app
        MYSQL_HOST: mysql
    script:
        - symfony console debug:dotenv --env=test
        - echo $DATABASE_URL
        - make test-report
    allow_failure: true

    artifacts:
        when: always
        reports:
            junit: report.xml

.deploy:
  image : alpine
  stage: deploy
  before_script :
    - apk add --no-cache openssh-client ca-certificates bash
    - mkdir -p -m 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa

deploy_prod:
    extends : .deploy
    stage: deploy
    environment:
        name: prod
        url: https://education.msadawaheri.fr
    script:
        - ssh fardus@$IP_PROD "cd /var/www/$REPO && git checkout master && git pull origin master --rebase && make build-up && exit"
    only:
        - main
